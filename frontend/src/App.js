import React, { useState, useEffect, useRef } from 'react';
import './App.css';

function App() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [selectedOffer, setSelectedOffer] = useState(0);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const sliderRef = useRef(null);

  const offers = [
    {
      text: "1+1=3: –ü—Ä–∏ –∑–∞–∫–∞–∑–µ 2 –±–∞–Ω–æ–∫ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–ª–∞–≥–µ–Ω–∞ ‚Äî –¢–†–ï–¢–¨–Ø –í –ü–û–î–ê–†–û–ö",
      button: "3-—è –±–∞–Ω–∫–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫",
      link: "https://wa.me/79999999999",
      icon: "üéÅ"
    },
    {
      text: "20 % –°–ö–ò–î–ö–ê –ù–ê –ù–ê–¢–£–†–ê–õ–¨–ù–´–ô –ö–û–õ–õ–ê–ì–ï–ù",
      button: "–°–∫–∏–¥–∫–∞ 20 % –≤ –∫–æ—Ä–∑–∏–Ω–µ", 
      link: "/cart/?apply_coupon=WEEKDEAL",
      icon: "üí∞"
    },
    {
      text: "–ú–∞–≥–Ω–∏–π B6 –≤ –ø–æ–¥–∞—Ä–æ–∫: –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ 1 –∫–≥ –±–∞–Ω–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–ª–∞–≥–µ–Ω–∞ ‚Äî –ú–ê–ì–ù–ò–ô B6 –í –ü–û–î–ê–†–û–ö",
      button: "–ú–∞–≥–Ω–∏–π B6 –≤ –ø–æ–¥–∞—Ä–æ–∫",
      link: "https://wa.me/79999999999",
      icon: "‚ú®"
    }
  ];

  const slides = [
    {
      id: 1,
      title: "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è –∏ —Å–∏—è–π —Å Somnium!",
      description: "–ì–ª—É–±–æ–∫–∏–π —Å–æ–Ω ‚Äî –ª—ë–≥–∫–æ–µ —É—Ç—Ä–æ. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–±–æ—Ç—É –∏ –∫–æ–º—Ñ–æ—Ä—Ç!",
      button: "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø–æ–¥—É—à–∫–∞—Ö",
      link: "#pillows",
      bgGradient: "linear-gradient(135deg, #325a55 0%, #2a4a45 50%, #1e3530 100%)",
      buttonClass: "btn-premium-primary",
      particles: true,
      accent: "üåô"
    },
    {
      id: 2, 
      title: "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞ ‚Äî —Ç–≤–æ–π –≤—ã–±–æ—Ä",
      description: "–ö–æ–ª–ª–∞–≥–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑–Ω—É—Ç—Ä–∏: –∫–æ–∂–∞ —Å–∏—è–µ—Ç, –≤–æ–ª–æ—Å—ã –∫—Ä–µ–ø—á–µ, –Ω–æ–≥—Ç–∏ –Ω–µ –ª–æ–º–∞—é—Ç—Å—è",
      button: "–í—ã–±—Ä–∞—Ç—å –≤–∫—É—Å",
      link: "#collagen",
      bgGradient: "linear-gradient(135deg, #f7f7f7 0%, #ffffff 50%, #f0f4f8 100%)",
      buttonClass: "btn-premium-primary",
      isLight: true,
      accent: "‚ú®"
    },
    {
      id: 3,
      title: "–ù–µ –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫—É—é –ø–æ–¥—É—à–∫—É –≤—ã–±—Ä–∞—Ç—å?",
      description: "–ü—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é",
      button: "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", 
      link: "#quiz-block",
      bgGradient: "linear-gradient(135deg, #f7f7f7 0%, #ffffff 50%, #e8f2f7 100%)",
      buttonClass: "btn-premium-accent",
      isLight: true,
      accent: "üéØ"
    },
    {
      id: 4,
      title: "–ê–∫—Ü–∏—è –Ω–µ–¥–µ–ª–∏",
      description: offers[selectedOffer].text,
      button: offers[selectedOffer].button,
      link: offers[selectedOffer].link,
      bgGradient: "linear-gradient(135deg, #aec958 0%, #9bb247 50%, #87a03c 100%)",
      buttonClass: "btn-premium-outline",
      isPromo: true,
      accent: offers[selectedOffer].icon,
      particles: true
    }
  ];

  const nextSlide = () => {
    if (isTransitioning) return;
    setIsTransitioning(true);
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    if (isTransitioning) return;
    setIsTransitioning(true);
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const goToSlide = (index) => {
    if (isTransitioning || index === currentSlide) return;
    setIsTransitioning(true);
    setCurrentSlide(index);
  };

  useEffect(() => {
    const timer = setTimeout(() => {
      setIsTransitioning(false);
    }, 600);
    return () => clearTimeout(timer);
  }, [currentSlide]);

  useEffect(() => {
    const timer = setInterval(() => {
      nextSlide();
    }, 6000);
    return () => clearInterval(timer);
  }, []);

  useEffect(() => {
    const handleMouseMove = (e) => {
      if (sliderRef.current) {
        const rect = sliderRef.current.getBoundingClientRect();
        setMousePosition({
          x: (e.clientX - rect.left) / rect.width,
          y: (e.clientY - rect.top) / rect.height
        });
      }
    };

    const slider = sliderRef.current;
    if (slider) {
      slider.addEventListener('mousemove', handleMouseMove);
      return () => slider.removeEventListener('mousemove', handleMouseMove);
    }
  }, []);

  return (
    <div className="App">
      {/* Premium Hero Slider Block */}
      <section 
        className="premium-hero-slider-section"
        ref={sliderRef}
        style={{
          '--mouse-x': mousePosition.x,
          '--mouse-y': mousePosition.y
        }}
      >
        <div className="premium-hero-slider-container">
          
          {/* Background Particles */}
          <div className="premium-particles">
            {Array.from({ length: 50 }).map((_, i) => (
              <div 
                key={i} 
                className="premium-particle"
                style={{
                  '--delay': `${i * 0.1}s`,
                  '--duration': `${3 + Math.random() * 4}s`,
                  left: `${Math.random() * 100}%`,
                  top: `${Math.random() * 100}%`,
                  animationDelay: `${Math.random() * 2}s`
                }}
              />
            ))}
          </div>

          {/* Main Slider */}
          <div className="premium-hero-slider-wrapper">
            {slides.map((slide, index) => (
              <div 
                key={slide.id}
                className={`premium-hero-slide ${index === currentSlide ? 'active' : ''} ${slide.isLight ? 'light-theme' : ''}`}
                style={{ 
                  background: slide.bgGradient,
                  zIndex: index === currentSlide ? 10 : 1
                }}
              >
                {/* Slide Background Effects */}
                <div className="premium-slide-bg-effects">
                  <div className="premium-gradient-overlay"></div>
                  <div className="premium-noise-overlay"></div>
                  {slide.particles && <div className="premium-slide-particles"></div>}
                </div>

                <div className="premium-slide-content">
                  <div className="premium-slide-grid">
                    
                    {/* Enhanced Image Column */}
                    <div className="premium-slide-image">
                      <div className="premium-image-container">
                        <div className="premium-product-card">
                          <div className="premium-product-glow"></div>
                          <div className="premium-product-placeholder">
                            <span className="premium-accent-icon">{slide.accent}</span>
                            <span className="premium-placeholder-text">–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞</span>
                            <div className="premium-placeholder-shine"></div>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    {/* Enhanced Content Column */}
                    <div className="premium-slide-text">
                      <div className="premium-content-wrapper">
                        <div className="premium-title-wrapper">
                          <h2 className="premium-hero-title">
                            <span className="premium-title-main">{slide.title}</span>
                            <div className="premium-title-underline"></div>
                          </h2>
                        </div>
                        
                        <p className="premium-hero-description">
                          {slide.description}
                        </p>
                        
                        {slide.isPromo && (
                          <div className="premium-promo-badge">
                            <span className="premium-promo-icon">{slide.accent}</span>
                            <span className="premium-promo-text">–¢–æ–ª—å–∫–æ —Å 28 –º–∞—è –ø–æ 1 –∏—é–Ω—è</span>
                          </div>
                        )}
                        
                        <div className="premium-button-wrapper">
                          <a 
                            href={slide.link}
                            className={`premium-hero-button ${slide.buttonClass}`}
                          >
                            <span className="premium-button-content">
                              <span className="premium-button-text">{slide.button}</span>
                              <span className="premium-button-arrow">‚Üí</span>
                            </span>
                            <div className="premium-button-bg"></div>
                            <div className="premium-button-shine"></div>
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          {/* Premium Navigation */}
          <div className="premium-hero-navigation">
            <button 
              className="premium-nav-btn prev"
              onClick={prevSlide}
              disabled={isTransitioning}
              aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥"
            >
              <span className="premium-nav-icon">‚Üê</span>
              <div className="premium-nav-ripple"></div>
            </button>
            
            <div className="premium-hero-dots">
              {slides.map((_, index) => (
                <button
                  key={index}
                  className={`premium-hero-dot ${index === currentSlide ? 'active' : ''}`}
                  onClick={() => goToSlide(index)}
                  disabled={isTransitioning}
                  aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É ${index + 1}`}
                >
                  <div className="premium-dot-inner"></div>
                  <div className="premium-dot-ripple"></div>
                </button>
              ))}
            </div>
            
            <button 
              className="premium-nav-btn next"
              onClick={nextSlide}
              disabled={isTransitioning}
              aria-label="–°–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥"
            >
              <span className="premium-nav-icon">‚Üí</span>
              <div className="premium-nav-ripple"></div>
            </button>
          </div>
          
          {/* Enhanced Slide Counter */}
          <div className="premium-hero-counter">
            <div className="premium-counter-content">
              <span className="premium-counter-current">
                {String(currentSlide + 1).padStart(2, '0')}
              </span>
              <span className="premium-counter-separator">/</span>
              <span className="premium-counter-total">
                {String(slides.length).padStart(2, '0')}
              </span>
            </div>
            <div className="premium-counter-progress">
              <div 
                className="premium-counter-progress-bar"
                style={{ width: `${((currentSlide + 1) / slides.length) * 100}%` }}
              ></div>
            </div>
          </div>
        </div>
      </section>

      {/* Premium Offer Selector (Admin Demo) */}
      <section className="premium-admin-demo-section">
        <div className="premium-admin-demo-container">
          <div className="premium-demo-header">
            <h3>–î–µ–º–æ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∞ - –í—ã–±–æ—Ä –æ—Ñ—Ñ–µ—Ä–∞ –¥–ª—è 4-–≥–æ —Å–ª–∞–π–¥–∞</h3>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é –∞–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Å–ª–∞–π–¥–µ—Ä–µ</p>
          </div>
          
          <div className="premium-offer-selector">
            {offers.map((offer, index) => (
              <label key={index} className={`premium-offer-option ${selectedOffer === index ? 'active' : ''}`}>
                <input 
                  type="radio"
                  name="offer"
                  value={index}
                  checked={selectedOffer === index}
                  onChange={() => setSelectedOffer(index)}
                />
                <div className="premium-offer-content">
                  <span className="premium-offer-icon">{offer.icon}</span>
                  <span className="premium-offer-text">{offer.text}</span>
                </div>
                <div className="premium-option-indicator"></div>
              </label>
            ))}
          </div>
        </div>
      </section>

      {/* Premium Product Catalog Demo */}
      <section className="premium-catalog-demo-section">
        <div className="premium-catalog-demo-container">
          <div className="premium-catalog-header">
            <h3>–î–µ–º–æ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å ACF promo_text –∏–Ω—Ñ–æ—Ä–º–µ—Ä–∞–º–∏</h3>
            <p>–ü—Ä–∏–º–µ—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–º–æ-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤</p>
          </div>
          
          <div className="premium-product-grid">
            {[1, 2, 3].map((product, index) => (
              <div key={product} className="premium-product-card">
                <div className="premium-product-image-wrapper">
                  <div className="premium-product-image">
                    <span>–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ {product}</span>
                    <div className="premium-product-overlay">
                      <button className="premium-quick-view">–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</button>
                    </div>
                  </div>
                </div>
                
                <div className="premium-product-info">
                  <h4 className="premium-product-title">–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä {product}</h4>
                  <div className="premium-product-price">
                    <span className="premium-price-current">2990 ‚ÇΩ</span>
                    <span className="premium-price-old">3490 ‚ÇΩ</span>
                  </div>
                  
                  <div className="premium-product-promo">
                    <span className="premium-promo-icon">{offers[index]?.icon || "üéÅ"}</span>
                    <span className="premium-promo-text">
                      {offers[index]?.text || "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"}
                    </span>
                  </div>
                  
                  <button className="premium-add-to-cart">
                    <span>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</span>
                    <span className="premium-cart-icon">üõí</span>
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}

export default App;